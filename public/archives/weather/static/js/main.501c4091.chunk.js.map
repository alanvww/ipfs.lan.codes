{"version":3,"sources":["components/WeatherCard.js","components/API_KEY.js","components/WeatherImage.js","containers/Home.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","cloudiness","currentTemp","highTemp","humidity","lowTemp","weatherDescription","weatherType","windSpeed","className","WEATHER_API_KEY","WeatherImage","icon","faCloud","faSun","faCloudRain","faSnowflake","mapboxgl","accessToken","Home","mapContainer","useRef","map","useEffect","current","weatherData","Map","container","style","center","weatherLng","weatherLat","zoom","useState","city","setCity","lng","setLng","lat","setLat","setWeatherData","query","URLSearchParams","useLocation","search","URL","GEO_URL","showPosition","geo_location","coords","longitude","latitude","get","cityValue","navigator","geolocation","getCurrentPosition","console","log","axios","then","response","data","catch","error","name","useMemo","clouds","all","Math","round","main","temp","temp_max","temp_min","weather","description","wind","speed","coord","lon","currentCity","document","getElementById","copyright","Date","getFullYear","innerHTML","href","textShadow","color","ref","id","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.501c4091.chunk.js","sourcesContent":["import React from 'react';\n\nfunction WeatherCard({\n\tcloudiness,\n\tcurrentTemp,\n\thighTemp,\n\thumidity,\n\tlowTemp,\n\tweatherDescription,\n\tweatherType = `Unknown`,\n\twindSpeed,\n}) {\n\treturn (\n\t\t<section className=\"WeatherCard\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Current Weather</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">{weatherType}</strong>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Current Temperature</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">{currentTemp}°C</strong>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Low - High</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">\n\t\t\t\t\t\t{lowTemp}°C - {highTemp}°C\n\t\t\t\t\t</strong>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Cloudiness</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">{cloudiness}</strong>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Humidity</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">{humidity}</strong>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Description</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">{weatherDescription}</strong>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"item\">\n\t\t\t\t\t<h2>Wind Speed</h2>\n\t\t\t\t\t<strong className=\"highlightedData\">{windSpeed}mph</strong>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default WeatherCard;\n","export const WEATHER_API_KEY = `70b0bdefd6b84baa7449b2155d0dd184`;\nexport const MAPBOX_API_KEY = `pk.eyJ1IjoibGFudnd3IiwiYSI6ImNrdXIxdHVuejBpMWQydnBqY2JrMzVobjYifQ.wXmDID7ZWPjlbJsxCMAb3Q`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCloud,\n\tfaSun,\n\tfaCloudRain,\n\tfaSnowflake,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction WeatherImage({ weatherType }) {\n\tswitch (weatherType) {\n\t\tcase 'Clouds':\n\t\t\treturn <FontAwesomeIcon icon={faCloud} />;\n\t\tcase 'Clear':\n\t\t\treturn <FontAwesomeIcon icon={faSun} />;\n\t\tcase 'Rain' || 'Thunderstorm':\n\t\t\treturn <FontAwesomeIcon icon={faCloudRain} />;\n\t\tcase 'Snow':\n\t\t\treturn <FontAwesomeIcon icon={faSnowflake} />;\n\t\tdefault:\n\t\t\treturn <FontAwesomeIcon icon={faCloud} />;\n\t}\n}\n\nexport default WeatherImage;\n","import React, { useMemo, useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router';\nimport axios from 'axios';\nimport WeatherCard from '../components/WeatherCard';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { WEATHER_API_KEY, MAPBOX_API_KEY } from '../components/API_KEY';\nimport WeatherImage from '../components/WeatherImage';\n\nmapboxgl.accessToken = MAPBOX_API_KEY;\n\n// URL Search Params... localhost:3000/?city=paris\n//abstract away URL Search Params here to make it easier to use\nfunction useQuery() {\n\treturn new URLSearchParams(useLocation().search);\n}\n\nfunction Home() {\n\tconst mapContainer = useRef(null);\n\tconst map = useRef(null);\n\n\tuseEffect(() => {\n\t\tif (map.current) return;\n\t\t// initialize map only once\n\t\tif (weatherData) {\n\t\t\tmap.current = new mapboxgl.Map({\n\t\t\t\tcontainer: mapContainer.current,\n\t\t\t\tstyle: 'mapbox://styles/mapbox/light-v10',\n\t\t\t\tcenter: [weatherLng, weatherLat],\n\t\t\t\tzoom: 10,\n\t\t\t});\n\t\t}\n\t});\n\n\tconst [city, setCity] = useState();\n\tconst [lng, setLng] = useState();\n\tconst [lat, setLat] = useState();\n\tconst [weatherData, setWeatherData] = useState();\n\n\tlet query = useQuery();\n\n\tconst URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_API_KEY}`;\n\tconst GEO_URL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${WEATHER_API_KEY}`;\n\n\tuseEffect(() => {\n\t\tif (query.get('city')) {\n\t\t\tconst cityValue = query.get('city');\n\t\t\tsetCity(cityValue);\n\t\t} else {\n\t\t\t// Check HTML Location API\n\t\t\tif (navigator.geolocation) {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(showPosition);\n\t\t\t} else {\n\t\t\t\tsetCity('osaka');\n\t\t\t\tconsole.log('Geolocation is not supported by this browser.');\n\t\t\t}\n\t\t}\n\t}, [query]);\n\n\t// Set Lng & Lat\n\tfunction showPosition(geo_location) {\n\t\tsetLng(geo_location.coords.longitude);\n\t\tsetLat(geo_location.coords.latitude);\n\t}\n\n\tuseEffect(() => {\n\t\t// Get weather data from weather API\n\t\tif (city) {\n\t\t\t// Make a request for a user with a given ID\n\t\t\taxios\n\t\t\t\t.get(URL)\n\t\t\t\t.then(function (response) {\n\t\t\t\t\t// handle success\n\t\t\t\t\tsetWeatherData(response.data);\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios\n\t\t\t\t.get(GEO_URL)\n\t\t\t\t.then(function (response) {\n\t\t\t\t\t// handle success\n\t\t\t\t\tsetWeatherData(response.data);\n\t\t\t\t\tsetCity(weatherData.name);\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t}, [GEO_URL, URL, city]);\n\n\tconst {\n\t\tcloudiness,\n\t\tcurrentTemp,\n\t\thighTemp,\n\t\thumidity,\n\t\tlowTemp,\n\t\tweatherDescription,\n\t\tweatherType,\n\t\twindSpeed,\n\t\tweatherLng,\n\t\tweatherLat,\n\t\tcurrentCity,\n\t} = useMemo(() => {\n\t\t// This is where we process data\n\t\tif (!weatherData) return {};\n\t\treturn {\n\t\t\tcloudiness: weatherData.clouds.all,\n\t\t\tcurrentTemp: Math.round(weatherData.main.temp - 273.15),\n\t\t\thighTemp: Math.round(weatherData.main.temp_max - 273.15),\n\t\t\thumidity: weatherData.main.humidity,\n\t\t\tlowTemp: Math.round(weatherData.main.temp_min - 273.15),\n\t\t\tweatherDescription: weatherData.weather[0].description,\n\t\t\tweatherType: weatherData.weather[0].main,\n\t\t\twindSpeed: weatherData.wind.speed,\n\t\t\tweatherLng: weatherData.coord.lon,\n\t\t\tweatherLat: weatherData.coord.lat,\n\t\t\tcurrentCity: weatherData.name,\n\t\t};\n\t}, [weatherData]);\n\n\t// footer copyright\n\tif (document.getElementById('copyright')) {\n\t\tconst copyright =\n\t\t\t`Made by <a href=\"mailto:alan.ren@pm.me\">@Alan Ren</a> &copy;` +\n\t\t\tnew Date().getFullYear();\n\t\tdocument.getElementById('copyright').innerHTML = copyright;\n\t}\n\n\treturn (\n\t\t<main className=\"App\">\n\t\t\t<header>\n\t\t\t\t<nav>\n\t\t\t\t\t<ul className=\"cityList\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"/\" className={!city && 'Active'}>\n\t\t\t\t\t\t\t\tCurrent Location\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"/?city=osaka\" className={city === 'osaka' && 'Active'}>\n\t\t\t\t\t\t\t\tOsaka\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"/?city=chicago\"\n\t\t\t\t\t\t\t\tclassName={city === 'chicago' && 'Active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tChicago\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"/?city=hongkong\"\n\t\t\t\t\t\t\t\tclassName={city === 'hongkong' && 'Active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tHongkong\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"/?city=london\" className={city === 'london' && 'Active'}>\n\t\t\t\t\t\t\t\tLondon\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"/?city=chengdu\"\n\t\t\t\t\t\t\t\tclassName={city === 'chengdu' && 'Active'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tChengdu\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<h1\n\t\t\t\t\tclassName=\"Location\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextShadow: `0 0 10px rgb(${255 - cloudiness},${255 - cloudiness},${\n\t\t\t\t\t\t\t255 - cloudiness\n\t\t\t\t\t\t})`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{currentCity}\n\t\t\t\t</h1>\n\t\t\t\t<section\n\t\t\t\t\tclassName=\"WeatherIcon\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: `rgba(${255 - cloudiness / 2},${255 - cloudiness / 2},${\n\t\t\t\t\t\t\t255 - cloudiness / 2\n\t\t\t\t\t\t},1`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<WeatherImage weatherType={weatherType} />\n\t\t\t\t</section>\n\t\t\t\t<div>\n\t\t\t\t\t<div ref={mapContainer} className=\"map-container\" />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<WeatherCard\n\t\t\t\tcloudiness={cloudiness}\n\t\t\t\tcurrentTemp={currentTemp}\n\t\t\t\thighTemp={highTemp}\n\t\t\t\thumidity={humidity}\n\t\t\t\tlowTemp={lowTemp}\n\t\t\t\tweatherDescription={weatherDescription}\n\t\t\t\tweatherType={weatherType}\n\t\t\t\twindSpeed={windSpeed}\n\t\t\t/>\n\n\t\t\t<footer id=\"copyright\"></footer>\n\t\t</main>\n\t);\n}\n\nexport default Home;\n","import './App.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './containers/Home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}